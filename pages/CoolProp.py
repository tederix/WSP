import streamlit as st
import numpy as np
import CoolProp.CoolProp as CP
from WSP import Vers


st.set_page_config(page_title="CoolProp", page_icon="üí¶")

#–≤–µ—â–µ—Å—Ç–≤–∞

Sub = {'1-Butene / 1-–ë—É—Ç–µ–Ω': ('1-Butene', 50000000.0, 525.0),
       'Acetone / –ê—Ü–µ—Ç–æ–Ω': ('Acetone', 700000000.0, 550.0),
       'Air / –í–æ–∑–¥—É—Ö': ('Air', 2000000000.0, 2000.0),
       'Ammonia / –ê–º–º–∏–∞–∫': ('Ammonia', 1000000000.0, 725.0),
       'Argon / –ê—Ä–≥–æ–Ω': ('Argon', 1000000000.0, 2000.0),
       'Benzene / –ë–µ–Ω–∑–æ–ª': ('Benzene', 500000000.0, 725.0),
       'CarbonDioxide / –î–∏–æ–∫—Å–∏–¥ —É–≥–ª–µ—Ä–æ–¥–∞': ('CarbonDioxide', 800000000.0, 2000.0),
       'CarbonMonoxide / –ú–æ–Ω–æ–æ–∫—Å–∏–¥ —É–≥–ª–µ—Ä–æ–¥–∞': ('CarbonMonoxide', 100000000.0, 500.0),
       'CarbonylSulfide / –ö–∞—Ä–±–æ–Ω–∏–ª—Å—É–ª—å—Ñ–∏–¥': ('CarbonylSulfide', 50000000.0, 650.0),
       'CycloHexane / –¶–∏–∫–ª–æ–≥–µ–∫—Å–∞–Ω': ('CycloHexane', 250000000.0, 700.0),
       'CycloPropane / –¶–∏–∫–ª–æ–ø—Ä–æ–ø–∞–Ω': ('CycloPropane', 28000000.0, 473.0),
       'Cyclopentane / –¶–∏–∫–ª–æ–ø–µ–Ω—Ç–∞–Ω': ('Cyclopentane', 250000000.0, 550.0),
       'D4 / –û–∫—Ç–∞–º–µ—Ç–∏–ª—Ü–∏–∫–ª–æ—Ç–µ—Ç—Ä–∞—Å–∏–ª–æ–∫—Å–∞–Ω': ('D4', 180000000.0, 1200.0),
       'D5 / –î–µ–∫–∞–º–µ—Ç–∏–ª—Ü–∏–∫–ª–æ–ø–µ–Ω—Ç–∞—Å–∏–ª–æ–∫—Å–∞–Ω': ('D5', 120000000.0, 630.0),
       'D6 / –î–æ–¥–µ–∫–∞–º–µ—Ç–∏–ª—Ü–∏–∫–ª–æ–ø–µ–Ω—Ç–∞—Å–∏–ª–æ–∫—Å–∞–Ω': ('D6', 30000000.0, 673.0),
       'Deuterium / –î–µ–π—Ç–µ—Ä–∏–π': ('Deuterium', 2000000000.0, 600.0),
       'Dichloroethane / 1,2-–î–∏—Ö–ª–æ—Ä—ç—Ç–∞–Ω': ('Dichloroethane', 1000000000.0, 1000.0),
       'DiethylEther / –î–∏—ç—Ç–∏–ª–æ–≤—ã–π —ç—Ñ–∏—Ä': ('DiethylEther', 100000000.0, 548.0),
       'DimethylCarbonate / –î–∏–º–µ—Ç–∏–ª–∫–∞—Ä–±–æ–Ω–∞—Ç': ('DimethylCarbonate', 60000000.0, 600.0),
       'DimethylEther / –î–∏–º–µ—Ç–∏–ª–æ–≤—ã–π —ç—Ñ–∏—Ä': ('DimethylEther', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),
       '1-–ë—É—Ç–µ–Ω / 1-Butene': ('1-Butene', 50000000.0, 525.0),

                }

Subst = list(Sub.keys())

#—Ñ—É–Ω–∫—Ü–∏—è "–ø–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏–∏" –æ—à–∏–±–æ–∫
def chek(funk):
    try:
        funk()
    except: "–ù–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è"

def text_1():  #—Ç–µ–∫—Å—Ç –¥–ª—è IAPWS –æ–¥–Ω–æ—Ç–∞–±–ª–∏—á–Ω—ã–π
    st.write("""  """)
    st.write(""" –£–¥–µ–ª—å–Ω—ã–π –æ–±—ä–µ–º """)
    st.write(""" –ü–ª–æ—Ç–Ω–æ—Å—Ç—å """)
    st.write(""" –£–¥–µ–ª—å–Ω–∞—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —ç–Ω–µ—Ä–≥–∏—è """)
    st.write(""" –£–¥–µ–ª—å–Ω–∞—è –∏–∑–æ–±–∞—Ä–Ω–∞—è —Ç–µ–ø–ª–æ–µ–º–∫–æ—Å—Ç—å """)
    st.write(""" –£–¥–µ–ª—å–Ω–∞—è –∏–∑–æ—Ö–æ—Ä–Ω–∞—è —Ç–µ–ø–ª–æ–µ–º–∫–æ—Å—Ç—å """)
    st.write(""" –ö–æ—ç—Ñ. —Ç–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç–∏ """)
    st.write(""" –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –≤—è–∑–∫–æ—Å—Ç—å """)
    st.write(""" –ö–∏–Ω–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤—è–∑–∫–æ—Å—Ç—å """)
    st.write(""" –ß–∏—Å–ª–æ –ü—Ä–∞–Ω–¥—Ç–ª—è""")
    st.write("""  """)
    st.write(""" –°–∫–æ—Ä–æ—Å—Ç—å –∑–≤—É–∫–∞""")
    st.write(""" –ö–æ—ç—Ñ. –∏–∑–æ—ç–Ω—Ç—Ä–æ–ø—ã """)
#–±–æ–∫–æ–≤–æ–µ –º–µ–Ω—é
with st.sidebar:
    page1 = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—â–µ—Å—Ç–≤–æ", Subst)
    tab1, tab2 = st.tabs(["–ù–∞—Å—Ç—Ä–æ–π–∫–∏", " "])
    with tab1:
        st.write(Sub[page1][0])
        st.write("#")
        Vers()
        st.write("–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ " + "[Github](https://github.com/tederix/WSP)")





page = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã", ["p-T"])
if page == "p-T":
    p = st.number_input('–í–≤–µ–¥–∏—Ç–µ –¥–∞–≤–ª–µ–Ω–∏–µ p, –ú–ü–∞', max_value = (Sub[page1][1])/10**6)
    T = st.number_input('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É T, –°', max_value = (Sub[page1][2]) - 273.15)
    p = p*10**6
    T = T+273.15
    col1, col2 = st.columns(2)

    with col1:
        st.subheader('–°–≤–æ–π—Å—Ç–≤–∞')
        st.write(""" p = """ + str('{:.6}'.format(p/10**6)) + " –ú–ü–∞")
        st.write(""" T = """ + str('{:.6}'.format(T-273.15)) + " –°")
        st.write("""  """)

        f = lambda: st.write(
            """ h = """ + str('{:.6}'.format((CP.PropsSI('H','P', p,'T', T, Sub[page1][0]))/1000)) + """ –∫–î–∂/–∫–≥""")
        chek(f)
        f = lambda: st.write(
            """ s = """ + str('{:.6}'.format((CP.PropsSI('S','P', p,'T', T, Sub[page1][0]))/1000)) + """ –∫–î–∂/(–∫–≥*¬∞C)""")
        chek(f)
        st.write("""  """)
        f = lambda: st.write(
            """ v = """ + str('{:.6}'.format(1/CP.PropsSI('D','P', p,'T', T, Sub[page1][0]))) + """ –º¬≥/–∫–≥""")
        chek(f)
        f = lambda: st.write(
            """ œÅ = """ + str('{:.6}'.format((CP.PropsSI('D','P', p,'T', T, Sub[page1][0])))) + """ –∫–≥/–º¬≥""")
        chek(f)
        f = lambda: st.write(
            """ u = """ + str('{:.6}'.format((CP.PropsSI('U','P', p,'T', T, Sub[page1][0]))/1000)) + """ –∫–î–∂/–∫–≥""")
        chek(f)
        f = lambda: st.write(
            """ cp = """ + str('{:.6}'.format((CP.PropsSI('C','P', p,'T', T, Sub[page1][0]))/1000)) + """ –∫–î–∂/(–∫–≥*¬∞C)""")
        chek(f)
        f = lambda: st.write(
            """ cv = """ + str('{:.6}'.format((CP.PropsSI('O','P', p,'T', T, Sub[page1][0]))/1000)) + """ –∫–î–∂/(–∫–≥*¬∞C)""")
        chek(f)
        f = lambda: st.write(
            """ Œª = """ + str('{:.6}'.format((CP.PropsSI('conductivity','P', p,'T', T, Sub[page1][0])))) + """ –í—Ç/(–º*¬∞C)""")
        chek(f)
        f = lambda: st.write(
            """ Œº = """ + str('{:.6}'.format(CP.PropsSI('viscosity','P', p,'T', T, Sub[page1][0]))) + """ –ü–∞*—Å""")
        chek(f)
        f = lambda: st.write(
            """ ŒΩ = """ + str('{:.6}'.format((CP.PropsSI('viscosity','P', p,'T', T, Sub[page1][0])/CP.PropsSI('D','P', p,'T', T, Sub[page1][0])))) + """ –º¬≤/—Å""")
        chek(f)
        f = lambda: st.write(
            """ Pr = """ + str('{:.6}'.format((CP.PropsSI('Prandtl','P', p,'T', T, Sub[page1][0])))) + """""")
        chek(f)
        st.write("""  """)
        f = lambda: st.write(""" w = """ + str('{:.6}'.format((CP.PropsSI('speed_of_sound','P', p,'T', T, Sub[page1][0])))) + """ –º/—Å""")
        chek(f)
        f = lambda: st.write(""" k = """ + str('{:.6}'.format((CP.PropsSI('isentropic_expansion_coefficient','P', p,'T', T, Sub[page1][0])))) + """""")
        chek(f)

        with col2:
            with st.expander("–ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤", expanded=True):
                st.write("""  """)
                st.write(""" –î–∞–≤–ª–µ–Ω–∏–µ """)
                st.write(""" –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ """)
                st.write("""  """)
                st.write(""" –£–¥–µ–ª—å–Ω–∞—è —ç–Ω—Ç–∞–ª—å–ø–∏—è """)
                st.write(""" –£–¥–µ–ª—å–Ω–∞—è —ç–Ω—Ç—Ä–æ–ø–∏—è """)
                text_1()


